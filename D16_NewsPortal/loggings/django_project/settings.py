"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r1$4troro&-0y99552+7l261#*sm!sr(6^c+_u*c2zs9@=n=p5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     'django.contrib.sites',
    
    'users',
#    'docs_work',
    'docs_work.apps.DocsWorkConfig',
    'docs_free',
    'django_filters', 

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # ... include the providers you want to enable:
    'allauth.socialaccount.providers.google', 

    'django_apscheduler'
]

SITE_ID = 1

#LOGIN_URL = 'users/login'
LOGIN_URL = '/accounts/login/'
#LOGIN_URL = '/docs/free/'
LOGIN_REDIRECT_URL = '/users/common'

ACCOUNT_FORMS = {'logup': 'users.models.BasicSignupForm'}

AUTHENTICATION_BACKENDS = [
   
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_UNIQUE_EMAIL = False
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_EMAIL_VERIFICATION = 'none'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                 # `allauth` needs this from django
                'django.template.context_processors.request',  
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    BASE_DIR / "static"
    ]
    
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER     = 'leonid.malov2010' # почтовый адрес до @
EMAIL_HOST_PASSWORD = 'forestwind1952'   # пароль от почты
EMAIL_USE_SSL = True

# формат даты, которую будет воспринимать наш задачник (вспоминаем модуль по фильтрам) 
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"
# если задача не выполняется за 25 секунд, то она автоматически снимается,
APSCHEDULER_RUN_NOW_TIMEOUT = 25  # Seconds


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'style' : '{',
#------------------------------------formatters----------------------------------
    'formatters': {
        'simple': {
            'format': '%(asctime)-23s | %(name)-18s | %(levelname)-8s | %(message)s'
        },
        'simple_warning': {
            'format': '%(asctime)-23s | %(name)-18s | %(levelname)-8s | %(message)s | %(pathname)s'
        },        
        'simple_error': {
            'format': '%(asctime)-23s | %(name)-18s | %(levelname)-8s | %(message)s | %(pathname)s | %(exc_info)s'
        },             
        'general': {
            'format': '%(asctime)-23s | %(name)-23s | %(levelname)-8s | %(module)-10s | %(message)s'
        },
        'errors': {
            'format': '%(asctime)-23s | %(name)-18s | %(levelname)-8s | %(module)-8s | %(message)s | %(exc_info)s'
        },                
        
    },
#------------------------------------filters----------------------------------
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        }
    },
#------------------------------------handlers----------------------------------
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'console_warning': {
            'level': 'WARNING',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple_warning'
        },
        'console_error': {
            'level': 'ERROR',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple_error'
        },             
        'file_general': {
            'level': 'INFO',
            'filters': ['require_debug_false'],
            'class': 'logging.FileHandler',
            'formatter': 'general',
            'filename': 'loggings/general.log'
        },
        'file_errors': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'formatter': 'errors',
            'filename': 'loggings/errors.log'
        },
        'file_security': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'general',
            'filename': 'loggings/security.log'
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],           
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'general'
        },                      
    },
#------------------------------------loggers------------------------------------
    'loggers': {
        'django': {
            'level': 'DEBUG',
            'handlers': ['console', 'console_warning', 'console_error', 'file_general'],
            'propagate': True,
       },
        'django.request': {
            'level': 'DEBUG',
            'handlers': ['file_errors', 'mail_admins'],
            'propagate': True,
          },      
        'django.server': {
            'level': 'DEBUG',
            'handlers': ['file_errors', 'mail_admins'],
            'propagate': True,
          },         
        'django.template': {
            'level': 'DEBUG',
            'handlers': ['file_errors'],
            'propagate': True,
          }, 
        'django.template': {
            'level': 'DEBUG',
            'handlers': ['file_errors'],
            'propagate': True,
          },
        'django.db_backends': {          
            'level': 'DEBUG',
            'handlers': ['file_errors'],
            'propagate': True,
          }, 
        'django.security': {          
            'level': 'DEBUG',
            'handlers': ['file_errors'],
            'propagate': True,
          }, 
#-------------------------------------------------------------------------------      
    }
}


